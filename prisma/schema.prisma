datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  activities    Activity[] // Add this line

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Activity {
  id               String   @id
  userId           String   // Add this line
  name             String
  type             String
  distance         Float    // Changed from Int to Float
  movingTime       Int
  averageSpeed     Float
  averageHeartrate Float?   // Made optional and renamed to match Strava API
  startDate        DateTime // Renamed from 'date' to match Strava API
  oneKm            String?
  fivekm           String?
  tenKm            String?
  halfMarathon     String?
  marathon         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}